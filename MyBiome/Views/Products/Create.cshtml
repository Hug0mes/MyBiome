@model MyBiome.Models.ProductsViewModel;
@{
    ViewBag.Title = "Create";
    
    if (ViewData.TryGetValue("ParentLayout", out var parentLayout))
    {
        Layout = (string)parentLayout;
    }
    else
    {
        Layout = "/Views/Dashboard/_Layout.cshtml";
    }

}



<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Create new Product</h2>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Name)
                    @Html.TextBoxFor(m => m.Products.Name, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Description)
                    @Html.TextAreaFor(m => m.Products.Description, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Price)
                    @Html.TextBoxFor(m => m.Products.Price, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Status)
                    @Html.DropDownListFor(m => m.Products.Status, new List<SelectListItem>
                {
                new SelectListItem { Text = "Active", Value = "Active" },
                new SelectListItem { Text = "Inative", Value = "Inactive" },
                }, "Select Status", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Height)
                    @Html.TextBoxFor(m => m.Products.Height, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Width</label>
                    @Html.TextBoxFor(m => m.Products.Whidh, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Products.Stock)
                    @Html.TextBoxFor(m => m.Products.Stock, new { @class = "form-control" })
                </div>

               <div class="form-group">
                <label class="control-label">Details Image </label>
                <div class="custom-file">
                    <input asp-for="ImageFile1" class="custom-file-input" id="customFile">
                    <label class="custom-file-label" for="customFile">Choose file</label>
                </div>
                <span asp-validation-for="ImageFile1" class="text-danger"></span>
            </div>

             <div class="form-group">
                    <label class="control-label">Details Image </label>
                <div class="custom-file">
                    <input asp-for="ImageFile2" class="custom-file-input" id="customFile">
                    <label class="custom-file-label" for="customFile">Choose file</label>
                </div>
                <span asp-validation-for="ImageFile2" class="text-danger"></span>
            </div>

                <div class="form-group">
                    <label class ="control-label">Other...</label>
                    <div class="custom-file">
                        <input asp-for="ImageFile3" class="custom-file-input" id="customFile">
                        <label class="custom-file-label" for="customFile">Choose file</label>
                    </div>
                    <span asp-validation-for="ImageFile3" class="text-danger"></span>
                </div>

                  <div class="form-group">
                      <label asp-for="Products.SubCategoryId" class="control-label"></label>
                      <div class="input-group">
                           <select class="form-control" asp-for="Products.SubCategoryId" asp-items="@(new SelectList(ViewBag.scatList, "Value", "Text"))" placeholder="Selecione uma opção"></select>
                      </div>
                      <span asp-validation-for="Products.SubCategoryId" class="text-danger"></span>
                  </div>
                       <br />


                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-success" />
                    <a href="@Url.Action("Index")" class="btn btn-default">Back to List</a>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    $(document).ready(function () {
        loadCategories();

        $("#refreshCategories").click(function () {
            loadCategories();
        });
    });

    function loadCategories() {
        $.ajax({
            type: "GET",
            url: "/api/Categories",
            data: "{}",
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.length; i++) {
                    s += '<label class="checkbox">';
                    s += '<input type="checkbox" name="categoriesSelectedIds" value="' + data[i].id + '">';
                    s += '<span>' + data[i].nome + '</span>';
                    s += '</label>';
                }
                $(".checkbox-list").html(s);
            }
        });
    }

    $(document).ready(function () {
        $('#CategoryId').change(function () {
            var categoryId = $(this).val();
            if (categoryId != '') {
                $.ajax({
                    url: '/Products/GetSubCategories',
                    type: 'GET',
                    dataType: 'json',
                    data: { categoryId: categoryId },
                    success: function (data) {
                        var options = '<option value="">-- Select a subcategory --</option>';
                        $.each(data, function (index, subcategory) {
                            options += '<option value="' + subcategory.Id + '">' + subcategory.Name + '</option>';
                        });
                        $('#SubCategoryId').html(options);
                    },
                    error: function () {
                        alert('An error occurred while loading the subcategories.');
                    }
                });
            } else {
                $('#SubCategoryId').html('<option value="">-- Select a subcategory --</option>');
            }
        });
    });
</script>